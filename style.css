/* CSS Variables */


:root {
    --primary-black: #000000;
    --primary-gray: #f8f8f8;
    --white: #ffffff;
    --dark-green: #00ff41;
    --light-green: #39ff14;
    --transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    background-color: var(--primary-black);
    color: var(--white);
    transition: var(--transition);
    overflow-x: hidden;
    scroll-behavior: smooth; /* Smooth scroll for anchor links */
}

body.light-mode {
    background-color: var(--white);
    color: var(--primary-black);
}

/* Navigation */
.navbar {
    position: fixed;
    top: 20px; /* Adjust top position to make it float */
    left: 50%;
    transform: translateX(-50%) translateY(-150%); /* Centering and initial hidden state */
    width: fit-content; /* Make the width fit its content */
    padding: 15px 40px; /* Increased horizontal padding */
    background: rgba(255, 255, 255, 0.033); /* Middle grey transparent */
    backdrop-filter: blur(10px); /* Subtle blur for the transparent effect */
    z-index: 1000;
    transition: var(--transition), transform 0.8s ease-out 0.5s forwards; /* Add transform to transition */
    border-radius: 50px; /* Rounded corners for pill shape */
    box-shadow: 0 4px 15px rgba(201, 198, 198, 0.162); /* Subtle shadow */
    animation: slideDownRounded 0.8s ease-out 0.5s forwards; /* New animation for rounded bar */
}

/* Styles for when scrolled */
.navbar.scrolled {
    background: rgba(128, 128, 128, 0.7); /* Less transparent on scroll */
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3); /* Slightly more prominent shadow */
}
/* Dropdown Container */
/* Dropdown Styles */
.dropdown {
    position: relative;
    display: inline-block;
}

.dropbtn {
    display: flex;
    align-items: center;
    gap: 5px;
    cursor: pointer;
}

.dropdown-content {
    display: none; /* Hidden by default */
    position: absolute;
    /* ... other styling for dropdown content ... */
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
      background-color: rgba(128, 128, 128, 0.9);
      border-radius: 15px;
}

.dropdown:hover .dropdown-content {
    display: block; /* Show on hover */
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(0); /* Animate into view */
}
/* Links inside the dropdown */
.dropdown-content a {
    color: var(--white);
    padding: 12px 16px;
    text-decoration: none;
    display: block;
    /* Make each link a block for full click area */
    text-align: left;
    transition: background-color 0.2s ease, color 0.2s ease;
    font-size: 1em;
    /* Adjust font size for dropdown items */
}

/* Adjust dropdown link color for light mode */
body.light-mode .dropdown-content a {
    color: var(--primary-black);
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {
    background-color: var(--dark-green);
    color: var(--primary-black);
    /* Text color when hovered */
}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {
    display: block;
    /* Show the dropdown when the parent is hovered */
    opacity: 1;
    /* Fade in */
    visibility: visible;
    /* Make visible */
    transform: translateX(-50%) translateY(0);
    /* Animate into place */
}
.light-mode .navbar {
    background: rgba(240, 240, 240, 0.7); /* Light grey transparent in light mode */
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.light-mode .navbar.scrolled {
    background: rgba(240, 240, 240, 0.9);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
}


.nav-container {
    display: flex;
    justify-content: space-between; /* This will now correctly push logo left, group right */
    align-items: center;
    width: 100%;
    margin: 0 auto;
}

.logo {
    font-size: 27px;
    font-weight: 800;
    letter-spacing: -0.02em;
    color: var(--white);
    transition: var(--transition);
    opacity: 0;
    animation: fadeIn 0.6s ease-out 1s forwards;
    margin-right: 40px; /* Add some space between logo and the nav-right-group */
}

.light-mode .logo {
    color: var(--primary-black);
}

/* NEW RULE for the right-side group */
.nav-right-group {
    display: flex;
    align-items: center;
    gap: 40px; /* Controls spacing between nav-links and theme-toggle */
}

.nav-links {
    display: flex;
    list-style: none;
    gap: 40px; /* Spacing between individual nav links */
    align-items: center;
}

.nav-links li {
    opacity: 0;
    transform: translateY(-20px);
    animation: fadeInUp 0.6s ease-out forwards;
}

.nav-links li:nth-child(1) { animation-delay: 1.2s; }
.nav-links li:nth-child(2) { animation-delay: 1.4s; }
.nav-links li:nth-child(3) { animation-delay: 1.6s; }
.nav-links li:nth-child(4) { animation-delay: 1.8s; }
.nav-links li:nth-child(5) { animation-delay: 2.0s; }

.nav-links a {
    text-decoration: none;
    font-weight: 500;
    font-size: 16px;
    color: var(--white);
    transition: var(--transition);
    position: relative;
}

.light-mode .nav-links a {
    color: var(--primary-black);
}

.nav-links a:hover {
    opacity: 0.7;
    transform: translateY(-2px);
}

.nav-links a::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--dark-green);
    transition: var(--transition);
}

.light-mode .nav-links a::after {
    background: var(--primary-black);
}

.nav-links a:hover::after {
    width: 100%;
}

.theme-toggle {
    background: none;
    border: none;
    padding: 10px;
    cursor: pointer;
    font-size: 20px;
    color: var(--dark-green);
    transition: var(--transition);
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
}

.theme-toggle:hover {
    transform: scale(1.1) rotate(15deg);
    color: var(--dark-green);
}

.light-mode .theme-toggle {
    color: var(--primary-black);
}

.light-mode .theme-toggle:hover {
    color: var(--primary-black);
}

.theme-toggle i {
    transition: transform 0.5s ease;
}

.light-mode .theme-toggle i {
    transform: rotate(360deg);
}

/* Keyframe Animations (unchanged) */
@keyframes slideDownRounded {
    from {
        transform: translateX(-50%) translateY(-150%);
    }
    to {
        transform: translateX(-50%) translateY(0);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}




/* In CSS Variables.txt */

.hero-content {
    max-width: 800px;
    padding: 20px; /* Corrected typo from '2 20px' to '20px' for vertical/horizontal padding */
    margin-top: 100px; /* Add this line to push the content downwards */
    position: relative;
    z-index: 5;
    will-change: transform;
}

.hero h1 {
 font-size: clamp(36px, 7vw, 110px); /* Made a little smaller */
    font-weight: 900;
    line-height: 0.9;
    margin-bottom: 30px;
    letter-spacing: -0.05em;
    background: linear-gradient(135deg, var(--white), var(--dark-green));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    opacity: 0;
    transform: translateY(50px) scale(0.9);
    animation: heroTitleReveal 1.2s ease-out 0.5s forwards;
}

.light-mode .hero h1 {
    background: linear-gradient(135deg, var(--primary-black), var(--primary-gray));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.hero p {
    font-size: 24px;
    font-weight: 300;
    margin-bottom: 50px;
    opacity: 0;
    line-height: 1.4;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease-out 1.2s forwards;
}

.cta-button {
    display: inline-block;
    padding: 18px 40px;
    background: var(--dark-green);
    color: var(--primary-black);
    text-decoration: none;
    border-radius: 50px;
    font-weight: 600;
    font-size: 18px;
    transition: var(--transition);
    border: 2px solid var(--dark-green);
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.8s ease-out 1.6s forwards;
}

.light-mode .cta-button {
    background: var(--primary-black);
    color: var(--white);
    border-color: var(--primary-black);
}

.cta-button:hover {
    background: transparent;
    color: var(--dark-green);
    transform: translateY(-4px) scale(1.05);
    box-shadow: 0 15px 40px rgba(0, 255, 65, 0.4);
}

.light-mode .cta-button:hover {
    background: transparent;
    color: var(--primary-black);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
}

/* Floating Elements */
/* Floating Elements */
.floating-element {
    position: absolute;
    opacity: 0.1;
    pointer-events: none;
    animation: float 6s ease-in-out infinite;
    will-change: transform, opacity; /* Hint for animation */
}

.floating-element:nth-child(1) {
    top: 25%; /* Slightly moved down */
    left: 10%;
    width: 50px; /* Slightly smaller */
    height: 50px; /* Slightly smaller */
    background: linear-gradient(45deg, var(--dark-green), transparent);
    border-radius: 50%;
    animation-delay: 0s;
}

.floating-element:nth-child(2) {
    top: 65%; /* Slightly moved down */
    right: 15%;
    width: 35px; /* Slightly smaller */
    height: 35px; /* Slightly smaller */
    background: linear-gradient(45deg, var(--dark-green), transparent);
    border-radius: 50%;
    animation-delay: 2s;
}

.floating-element:nth-child(3) {
    bottom: 15%; /* Slightly moved down */
    left: 20%;
    width: 70px; /* Slightly smaller */
    height: 70px; /* Slightly smaller */
    background: linear-gradient(45deg, var(--dark-green), transparent);
    border-radius: 50%;
    animation-delay: 4s;
}

/* Services Section */
:root {
    --primary-black: #000000;
    --primary-gray: #f8f8f8;
    --white: #ffffff;
    --dark-green: #00ff41;
    --light-green: #39ff14;
    --transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* Base body styles for dark mode */
body {
    background-color: var( --primary-black);
    color: var(--white);
}

/* Light mode specific styles */
.light-mode body {
    background-color: #F8F8F8;
    color: var( --primary-black);
}

.services {
    padding: 120px 50px;
    max-width: 1400px;
    margin: 0 auto;
    position: relative;
    overflow: hidden; /* Ensures no overflow from pseudo-elements */
}

.section-title {
    font-size: clamp(40px, 6vw, 80px);
    font-weight: 800;
    text-align: center;
    margin-bottom: 80px;
    letter-spacing: -0.03em;
    position: relative;
    color: var(--white); /* Ensure title is visible */
}

.light-mode .section-title {
    color: var( --primary-black);
}

.section-title::after {
    content: '';
    position: absolute;
    bottom: -15px; /* Slightly lower */
    left: 50%;
    transform: translateX(-50%) scaleX(0);
    width: 120px; /* Wider line */
    height: 5px; /* Thicker line */
    background: linear-gradient(90deg, transparent, var(--dark-green), transparent); /* Gradient line */
    transition: transform 0.8s cubic-bezier(0.165, 0.84, 0.44, 1); /* Enhanced ease-out */
}

.section-title.revealed::after {
    transform: translateX(-50%) scaleX(1);
}

.services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); /* Slightly smaller min-width for flexibility */
    gap: 50px; /* Increased gap */
    margin-top: 60px;
}

.service-card {
    padding: 50px 40px;
    border: 1px solid var(--off-black); /* More subtle border initially */
    border-radius: 20px;
    transition: var(--transition);
    background: var(--off-black); /* Card background */
    cursor: pointer;
    position: relative;
    overflow: hidden;
    will-change: transform, box-shadow, border-color;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3); /* Initial subtle shadow */
}

/* Inner glow effect on service card */
.service-card::before {
    content: '';
    position: absolute;
    top: -2px; /* Slight overlap for smooth effect */
    left: -102%; /* Start further left */
    width: 104%; /* Wider to cover edges */
    height: 104%; /* Taller to cover edges */
    background: linear-gradient(90deg, transparent, rgba(0, 191, 99, 0.15), transparent); /* Stronger green tint */
    transition: left 0.9s cubic-bezier(0.25, 0.8, 0.25, 1);
    z-index: 1; /* Ensure it's above background but below content */
    border-radius: 20px;
}

.service-card:hover::before {
    left: 102%; /* End further right */
}

.light-mode .service-card {
    background: #FFFFFF;
    border-color: var(--light-gray);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.service-card:hover {
    transform: translateY(-18px) scale(1.03); /* More pronounced lift */
    box-shadow: 0 30px 90px rgba(0, 191, 99, 0.25); /* Stronger green shadow */
    border-color: var(--dark-green); /* Green border on hover */
    z-index: 2; /* Bring hovered card to front */
}

.light-mode .service-card:hover {
    box-shadow: 0 30px 90px rgba(0, 0, 0, 0.2);
    border-color: var( --primary-black);
}

.service-icon {
    width: 65px; /* Slightly larger icon */
    height: 65px;
    background: var(--dark-green);
    border-radius: 50%; /* Circular icon */
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 35px; /* More space below icon */
    color: var( --primary-black); /* Icon color */
    font-size: 28px; /* Larger icon font */
    font-weight: bold;
    transition: var(--transition);
    box-shadow: 0 5px 15px rgba(0, 191, 99, 0.4); /* Green shadow for icon */
}

.service-card:hover .service-icon {
    transform: rotateY(360deg) scale(1.15); /* More pronounced icon animation */
    box-shadow: 0 8px 25px rgba(0, 191, 99, 0.6);
}

.light-mode .service-icon {
    background: var( --primary-black);
    color: var(--white);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.service-card h3 {
    font-size: 30px; /* Larger heading */
    font-weight: 700;
    margin-bottom: 25px;
    transition: var(--transition);
    color: var(--white); /* Ensure heading is visible */
}

.light-mode .service-card h3 {
    color: var( --primary-black);
}

.service-card:hover h3 {
    color: var(--dark-green); /* Green heading on hover */
}

.light-mode .service-card:hover h3 {
    color: var( --primary-black);
}

.service-card p {
    font-size: 17px; /* Slightly larger paragraph text */
    line-height: 1.7;
    opacity: 0.85; /* Slightly less opaque initially */
    transition: var(--transition);
    color: var(--light-gray); /* Softer paragraph text */
}

.light-mode .service-card p {
    color: var( --primary-black);
}

.service-card:hover p {
    opacity: 1;
    transform: translateY(-3px); /* More noticeable text lift */
}
.slides-container .slide {
    /* Initial state - off-screen to the right, for example */
    transform: translateX(100%);
    transition: transform 0.5s ease-in-out; /* Smooth transition */
}

.slides-container .slide.active { /* Class added by JavaScript when slide is active */
    transform: translateX(0); /* Move to its original position */
}


/* About Section */
.about {
    padding: 120px 50px;
    background: #0a0a0a;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
}

.about::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 0%, rgba(0, 255, 65, 0.05) 50%, transparent 100%);
    transform: translateX(-100%);
    transition: transform 1.5s ease-out;
}

.about.revealed::before {
    transform: translateX(100%);
}

.light-mode .about {
    background: var(--primary-gray);
}

.about-container {
    max-width: 1200px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 80px;
    align-items: center;
    position: relative;
    z-index: 2;
}

.about-text h2 {
    font-size: clamp(36px, 5vw, 60px);
    font-weight: 800;
    margin-bottom: 30px;
    line-height: 1.1;
    overflow: hidden;
}

.about-text h2 span {
    display: inline-block;
    transform: translateY(100%);
    transition: transform 0.8s ease-out;
}

.about-text h2.revealed span {
    transform: translateY(0);
}

.about-text h2 span:nth-child(1) { transition-delay: 0.1s; }
.about-text h2 span:nth-child(2) { transition-delay: 0.2s; }
.about-text h2 span:nth-child(3) { transition-delay: 0.3s; }

.about-text p {
    font-size: 18px;
    line-height: 1.7;
    margin-bottom: 20px;
    opacity: 0;
    transform: translateX(-30px);
    transition: all 0.6s ease-out;
}

.about-text.revealed p {
    opacity: 0.9;
    transform: translateX(0);
}

.about-text p:nth-child(3) { transition-delay: 0.2s; }
.about-text p:nth-child(4) { transition-delay: 0.4s; }
/* In CSS Variables.txt */
/* In CSS Variables.txt */

.stats {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 40px;
    margin-top: 20px; /* Adjusted: Changed from 50px to 20px to move it slightly upwards. You can adjust this value. */
    
    max-width: 600px; /* Added: Set a max-width to the grid container */
    margin-left: auto; /* Added: Auto margins to center the grid horizontally */
    margin-right: auto; /* Added: Auto margins to center the grid horizontally */
    /* Or a shorthand: margin: 20px auto 0 auto; if you only want to adjust top margin. */
}

/* Keep your existing .stat, .stat-number, .stat-label styles as they are */
.stat {
    text-align: center;
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
}

.stat.revealed {
    opacity: 1;
    transform: translateY(0);
}

.stat:nth-child(1) { transition-delay: 0.6s; }
.stat:nth-child(2) { transition-delay: 0.8s; }

.stat-number {
    font-size: 48px;
    font-weight: 900;
    color: var(--dark-green);
    display: block;
    transition: var(--transition);
}

.stat:hover .stat-number {
    transform: scale(1.1);
    text-shadow: 0 0 20px rgba(0, 255, 65, 0.5);
}

.light-mode .stat-number {
    color: var(--primary-black);
}

.stat-label {
    font-size: 14px;
    font-weight: 500;
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 0.1em;
}
.about-image {
    position: relative;
}

.about-image > div {
    width: 100%;
    height: 400px;
    background: linear-gradient(135deg, #1A1A1A, #333333); /* Deep charcoal to dark grey */
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #E0E0E0; /* Soft white/light grey text */
    font-size: 25px;
    font-weight: 750;
    transition: all 0.5s ease-in-out; /* Slower, smoother transition */
    position: relative;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* Initial subtle shadow */
}

.about-image > div:hover {
    background: linear-gradient(135deg, #2A2A2A, #444444); /* Slightly lighter gradient on hover */
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.4); /* More spread out shadow */
    /* Add a subtle pseudo-element for a "glow" effect */
    /* Note: This requires an additional pseudo-element in HTML or a more complex CSS approach for a true inner glow.
       For a simple CSS change, consider adding a slightly brighter text shadow on hover or a very subtle border. */
}

/* If you want an *inner* glow, you'd usually use box-shadow: inset or a pseudo-element.
   Here's how you might approximate it for the text for this dark theme: */
.about-image > div:hover {
    text-shadow: 0 0 15px rgba(255, 255, 255, 0.6); /* Text glows */
}

.about-image > div::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 0%, rgba(4, 255, 50, 0.2) 50%, transparent 100%);
    transform: translateX(-100%);
    transition: transform 3s ease-in-out;
}

.about-image.revealed > div::before {
    transform: translateX(100%);
}

.about-image > div:hover {
    transform: scale(1.05) rotateY(5deg);
    box-shadow: 0 20px 60px rgba(0, 255, 65, 0.3);
}

/* Progress Bar */
.progress-bar {
    position: fixed;
    top: 0;
    left: 0;
    width: 0%;
    height: 4px;
    background: linear-gradient(90deg, var(--dark-green), var(--light-green));
    z-index: 1001;
    transition: width 0.1s ease-out;
}

/* Footer / Contact Section */
.footer {
    padding: 80px 50px 40px;
    background: #000000;
    color: var(--white);
    transition: var(--transition);
    border-top: 1px solid #333333;
    position: relative;
}

.light-mode .footer {
    background: var(--primary-black);
}

.footer-container {
    max-width: 1400px;
    margin: 0 auto;
    display: grid;
    /* Adjust grid to accommodate 4 sections more evenly if needed */
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); 
    gap: 50px;
}

.footer-section {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
}

.footer-section.revealed {
    opacity: 1;
    transform: translateY(0);
}

/* Adjusted animation delays for 4 sections */
.footer-section:nth-child(1) { transition-delay: 0.1s; } /* AILiance details */
.footer-section:nth-child(2) { transition-delay: 0.2s; } /* Services */
.footer-section:nth-child(3) { transition-delay: 0.3s; } /* Reach Us (your contact info) */
.footer-section:nth-child(4) { transition-delay: 0.4s; } /* Get a Quote (client form) */


.footer-section h3 {
    font-size: 24px;
    font-weight: 700;
    margin-bottom: 30px;
    color: var(--dark-green);
    transition: var(--transition);
}

.footer-section:hover h3 {
    transform: translateX(10px);
}

.light-mode .footer-section h3 {
    color: var(--white);
}

/* Styling for the agency's contact details (Reach Us section) */
.contact-info-details p {
    display: flex; /* Use flex to align icon and text */
    align-items: center; /* Vertically align items */
    color: var(--primary-gray);
    text-decoration: none;
    font-size: 16px;
    line-height: 1.8;
    transition: var(--transition);
    margin-bottom: 8px; /* Spacing between contact lines */
}

.contact-info-details p:last-of-type {
    margin-bottom: 0; /* No bottom margin for the last paragraph */
}

.contact-icon {
    margin-right: 15px; /* Space between icon and text */
    font-size: 18px;
    color: var(--dark-green); /* Green icons */
    transition: transform 0.3s ease;
}

.light-mode .contact-icon {
    color: var(--primary-black); /* Black icons in light mode */
}

.contact-info-details p:hover .contact-icon {
    transform: translateX(-5px) scale(1.1); /* Slight animation on icon hover */
}

.contact-label {
    font-weight: 600;
    margin-right: 8px; /* Space between label and value */
    color: var(--white); /* Make labels slightly more prominent */
}

.light-mode .contact-label {
    color: var(--primary-black);
}

/* General styling for footer links (Services and Follow Us sections) */
.footer-section a {
    color: var(--primary-gray);
    text-decoration: none;
    font-size: 16px;
    line-height: 1.8;
    transition: var(--transition);
    display: block;
    margin-bottom: 8px;
}

.footer-section a:hover {
    color: var(--dark-green);
    transform: translateX(5px);
}

.light-mode .footer-section a:hover {
    color: var(--white);
}

/* NEW: Styling for the Client Contact Form */
.contact-form .form-group {
    margin-bottom: 20px;
}

.contact-form label {
    display: block;
    font-size: 14px;
    font-weight: 500;
    color: var(--primary-gray);
    margin-bottom: 8px;
}

.light-mode .contact-form label {
    color: var(--primary-black);
}

.contact-form input[type="text"],
.contact-form input[type="tel"],
.contact-form input[type="email"] {
    width: 100%;
    padding: 12px 15px;
    background-color: #1a1a1a;
    border: 1px solid #333333;
    border-radius: 8px;
    color: var(--white);
    font-size: 16px;
    outline: none;
    transition: border-color 0.3s ease, background-color 0.3s ease;
}

.light-mode .contact-form input[type="text"],
.light-mode .contact-form input[type="tel"],
.light-mode .contact-form input[type="email"] {
    background-color: #f0f0f0;
    border-color: #ccc;
    color: var(--primary-black);
}

.contact-form input[type="text"]::placeholder,
.contact-form input[type="tel"]::placeholder,
.contact-form input[type="email"]::placeholder {
    color: #888888;
}

.light-mode .contact-form input[type="text"]::placeholder,
.light-mode .contact-form input[type="tel"]::placeholder,
.light-mode .contact-form input[type="email"]::placeholder {
    color: #a0a0a0;
}


.contact-form input[type="text"]:focus,
.contact-form input[type="tel"]:focus,
.contact-form input[type="email"]:focus {
    border-color: var(--dark-green);
    box-shadow: 0 0 0 3px rgba(0, 255, 65, 0.3);
}

.light-mode .contact-form input[type="text"]:focus,
.light-mode .contact-form input[type="tel"]:focus,
.light-mode .contact-form input[type="email"]:focus {
    border-color: var(--primary-black);
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
}

.submit-button {
    display: inline-block;
    padding: 15px 30px;
    background: var(--dark-green);
    color: var(--primary-black);
    text-decoration: none;
    border-radius: 50px;
    font-weight: 600;
    font-size: 16px;
    border: 2px solid var(--dark-green);
    cursor: pointer;
    transition: var(--transition);
    width: 100%; /* Make button full width */
    margin-top: 10px; /* Space above button */
}

.light-mode .submit-button {
    background: var(--primary-black);
    color: var(--white);
    border-color: var(--primary-black);
}

.submit-button:hover {
    background: transparent;
    color: var(--dark-green);
    transform: translateY(-2px) scale(1.01);
    box-shadow: 0 10px 30px rgba(0, 255, 65, 0.4);
}

.light-mode .submit-button:hover {
    background: transparent;
    color: var(--primary-black);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

.form-message {
    margin-top: 15px;
    font-size: 15px;
    text-align: center;
    opacity: 0;
    transition: opacity 0.5s ease;
    color: var(--primary-gray); /* Default message color */
}

.form-message.success {
    color: var(--dark-green); /* Green for success */
    opacity: 1;
}

.form-message.error {
    color: #ff4141; /* Red for error */
    opacity: 1;
}


.footer-bottom {
    margin-top: 50px;
    padding-top: 30px;
    border-top: 1px solid #333333;
    text-align: center;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s ease-out;
}

.footer-bottom.revealed {
    opacity: 0.6;
    transform: translateY(0);
}

/* Animations */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideDown {
    from {
        transform: translateY(-100%);
    }
    to {
        transform: translateY(0);
    }
}

@keyframes heroTitleReveal {
    from {
        opacity: 0;
        transform: translateY(50px) scale(0.9);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes pulseGlow {
    0%, 100% {
        opacity: 0;
        transform: scale(1);
    }
    50% {
        opacity: 1;
        transform: scale(1.05);
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-20px) rotate(180deg);
    }
}

/* --- Image Showcase Section --- */
.image-showcase {
    padding: 120px 0; /* Adjust padding as needed */
    background-color: var(--primary-black); /* Or match your section background */
    transition: var(--transition);
    overflow: hidden; /* Important for horizontal scrolling */
}

.light-mode .image-showcase {
    background-color: var(--white);
}

.image-showcase .section-title {
    margin-bottom: 60px; /* Adjust spacing below title */
    padding: 0 50px; /* Match global padding for consistency */
}

.slides-container {
    display: flex; /* Arrange slides horizontally */
    overflow-x: scroll; /* Enable horizontal scrolling */
    scroll-snap-type: x mandatory; /* Snap to slides */
    -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
    padding: 0 50px; /* Padding for the sides of the carousel */
    gap: 40px; /* Space between slides */
}

/* Hide scrollbar for aesthetics (optional) */
.slides-container::-webkit-scrollbar {
    display: none;
}
.slides-container {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
}

.slide {
    flex-shrink: 0; /* Prevent slides from shrinking */
    width: 90vw; /* Occupy most of the viewport width */
    max-width: 1200px; /* Maximum width for larger screens */
    height: 600px; /* Fixed height for image container */
    border-radius: 20px;
    overflow: hidden; /* Keep image within rounded corners */
    position: relative;
    scroll-snap-align: center; /* Snap point for each slide */
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.4); /* Add some depth */
    transition: box-shadow 0.3s ease;
}

.light-mode .slide {
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.1);
}

.slide:hover {
    box-shadow: 0 20px 60px rgba(0, 255, 65, 0.3); /* Green glow on hover */
}

.light-mode .slide:hover {
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
}

/* Your provided animation CSS */
@keyframes adjust-image {
    0% {
        object-position: 100% 0; /* Start at the right edge */
    }
    100% {
        object-position: 0 0; /* End at the left edge */
    }
}

.slide > img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Cover the container */
    object-position: 100% 0; /* Default position (right edge) */
    
    /* Apply the scroll-driven animation */
    animation: adjust-image linear both;
    animation-timeline: view(x); /* Key: animate based on horizontal scroll */
}


/* Responsive Design */
@media (max-width: 768px) {
    .navbar {
        padding: 15px 20px;
    }

    .nav-links {
        gap: 20px;
    }

    .nav-links a {
        font-size: 14px;
    }

    .services {
        padding: 80px 20px;
    }

    .services-grid {
        grid-template-columns: 1fr;
        gap: 30px;
    }

    .about-container {
        grid-template-columns: 1fr;
        gap: 50px;
        text-align: center;
    }

    .footer {
        padding: 60px 20px 30px;
    }

    .theme-toggle {
        padding: 8px 16px;
        font-size: 12px;
    }

    /* Responsive adjustments for image showcase */
    .image-showcase {
        padding: 80px 0;
    }

    .image-showcase .section-title {
        padding: 0 20px;
    }

    .slides-container {
        padding: 0 20px;
        gap: 20px;
    }

    .slide {
        width: 95vw; /* Make slides take more width on smaller screens */
        height: 400px; /* Adjust height for mobile */
    }
    
    /* Adjust footer contact text on small screens */
    .contact-info-details p {
        flex-direction: column; /* Stack icon/label and value */
        align-items: flex-start; /* Align to the left */
    }
    
    .contact-icon {
        margin-bottom: 5px; /* Space between icon and stacked label/value */
        margin-right: 0;
    }

    .contact-label {
        display: block; /* Stack label and value */
        margin-right: 0;
        margin-bottom: 5px; /* Add space below label */
    }
}

/* Scroll animations */
.scroll-reveal {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s ease-out;
}

.scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
}

.scroll-reveal-left {
    opacity: 0;
    transform: translateX(-50px);
    transition: all 0.8s ease-out;
}

.scroll-reveal-left.revealed {
    opacity: 1;
    transform: translateX(0);
}

.scroll-reveal-right {
    opacity: 0;
    transform: translateX(50px);
    transition: all 0.8s ease-out;
}

.scroll-reveal-right.revealed {
    opacity: 1;
    transform: translateX(0);
}
/* Add to CSS Variables.txt */

/* Enhanced Background Animation */
@keyframes backgroundPan {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

/* Apply to the body or a specific section like .hero */
body {
    /* ... existing styles ... */
    background-size: 200% 200%; /* For the panning effect */
    animation: backgroundPan 30s linear infinite;
}

/* You can also add more complex floating elements */
.floating-element-large {
    position: absolute;
    width: 200px;
    height: 200px;
    background: radial-gradient(circle at 50% 50%, rgba(57, 255, 20, 0.05) 0%, transparent 70%);
    border-radius: 50%;
    animation: float 10s ease-in-out infinite alternate;
    z-index: 1;
    pointer-events: none;
}

.floating-element-large:nth-child(1) {
    top: 10%;
    left: 5%;
    animation-delay: 1s;
}

.floating-element-large:nth-child(2) {
    bottom: 15%;
    right: 10%;
    animation-delay: 3s;
}
/* Add to CSS Variables.txt */

/* Custom Cursor */
body {
    cursor: none; /* Hide default cursor */
}

.custom-cursor {
    position: fixed;
    top: 0;
    left: 0;
    width: 20px;
    height: 20px;
    border: 2px solid var(--dark-green); /* Or var(--white) for light mode */
    border-radius: 50%;
    pointer-events: none; /* Allows clicks to pass through */
    transform: translate(-50%, -50%); /* Centers the cursor */
    transition: width 0.2s ease, height 0.2s ease, background-color 0.2s ease, border-color 0.2s ease;
    z-index: 9999; /* Ensure it's on top */
}

.custom-cursor.clicked {
    width: 40px;
    height: 40px;
    background-color: rgba(0, 255, 65, 0.3); /* Green glow on click */
}

.light-mode .custom-cursor {
    border-color: var(--primary-black);
}

.light-mode .custom-cursor.clicked {
    background-color: rgba(0, 0, 0, 0.1);
}

/* Style for interactive elements */
a, button, .service-card, .theme-toggle {
    cursor: none; /* Hide default cursor for interactive elements too */
}
/* Add to CSS Variables.txt */

/* Style for the background video */
#hero-video-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Ensures the video covers the entire container */
    z-index: -2; /* Place it behind other content */
}

/* Add an overlay to the hero section for better text readability */
.hero::after { /* Using ::after pseudo-element for the overlay */
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black overlay */
    z-index: -1; /* Place it between the video and content */
}

/* Ensure hero section is positioned relatively to contain absolute children */
.hero {
    position: relative; /* Crucial for absolute positioning of video and overlay */ 
    overflow: hidden; /* Hide any overflow from video or floating elements */ 
    min-height: 100vh; /* Example: ensure it takes full viewport height */ 
    display: flex; 
    align-items: center; 
    justify-content: center; 
    padding: 0 20px;
    text-align: center; 
    /* Remove any background-image or background-color if you want only the video */
    background: none; /* or background-color: transparent; */ 
    transition: var(--transition); 
}

/* Adjust z-index for hero content and floating elements to be above the video/overlay */
.hero-content {
    position: relative; /* Ensure it stays above the overlay */ 
    z-index: 1; /* Place it above the overlay and video */
    will-change: transform; 
}

.floating-element, .floating-element-large {
    position: absolute; /* Keep existing positioning */ 
    z-index: 0; /* Place them above the video but potentially below content if desired, adjust as needed */
    opacity: 0.1; 
    pointer-events: none; 
    animation: float 6s ease-in-out infinite; 
    will-change: transform, opacity; 
}

/* If you had a background animation on ::before, ensure its z-index is lower than the video */
.hero::before {
    z-index: -3; /* Even further back than the video */ 
}

/* Adjust body background animation if it conflicts with video background */
body {
    /* If you're using a full-screen video, the body's background-image/animation might not be visible */
    /* Consider removing or simplifying: */
    /* background-size: auto; */
    /* animation: none; */
}
/* Add to CSS Variables.txt */

/* Music Toggle Button */
.music-toggle {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: var(--dark-green);
    color: var(--primary-black);
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    cursor: pointer;
    z-index: 10000; /* Ensure it's above everything else */
    box-shadow: 0 4px 15px rgba(0, 255, 65, 0.4);
    transition: background-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
}

.music-toggle:hover {
    background-color: var(--light-green);
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(0, 255, 65, 0.6);
}

.music-toggle i {
    transition: transform 0.3s ease;
}

/* Light Mode specific styles for the button */
body.light-mode .music-toggle {
    background-color: var(--primary-black);
    color: var(--white);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
}

body.light-mode .music-toggle:hover {
    background-color: #333;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.6);
}
/* In CSS Variables.txt */

/* Add perspective to the parent .hero to enable 3D transforms for its children */
.hero {
    position: relative;
    overflow: hidden;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 20px;
    text-align: center;
    background: none;
    transition: var(--transition);
    perspective: 1200px; /* Added: Gives depth to 3D transformations within this container */
}

.hero-content {
    max-width: 800px;
    padding: 20px; /* Ensure this is corrected from '2 20px' */
    margin-top: 50px; /* Adjust this value to position the text slightly downwards */
    position: relative;
    z-index: 5; /* Ensure it's above the video and overlay */
    will-change: transform, opacity; /* Keep this for performance */

    /* Initial state for the 3D transition */
    opacity: 0; 
    transform: rotateY(-90deg) scale(0.8); /* Starts rotated and slightly smaller */
    
    /* Apply the animation */
    animation: reveal3D 1.8s cubic-bezier(0.23, 1, 0.32, 1) forwards; /* Adjust duration and easing */
    animation-delay: 0.5s; /* Delay the animation slightly after page load */
}

/* Define the 3D Reveal Keyframe Animation */
@keyframes reveal3D {
    0% {
        opacity: 0;
        transform: rotateY(-90deg) scale(0.8); /* Starts hidden, rotated, and smaller */
    }
    60% {
        opacity: 1;
        transform: rotateY(10deg) scale(1.05); /* Slight overshoot for a more dynamic effect */
    }
    100% {
        opacity: 1;
        transform: rotateY(0deg) scale(1); /* Ends visible, no rotation, original size */
    }
}
/* In CSS Variables.txt */

.services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 40px;
    padding: 0 50px;
    margin-top: 50px;
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
    perspective: 1200px; /* Added: Enables 3D transformations for child elements */
    transform-style: preserve-3d; /* Ensures child 3D transforms are rendered correctly */
}

.service-card {
    background-color: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(5px);
    border-radius: 15px;
    padding: 40px 30px;
    text-align: left;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    position: relative;
    z-index: 1;
    transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1); /* Increased duration for smoother 3D effect */
    transform-style: preserve-3d; /* Important for self-contained 3D transforms */

    /* Initial state for 3D zoom effect */
    opacity: 0;
    transform: translateY(50px) scale(0.7) rotateY(-30deg); /* Starts lower, smaller, and rotated */
}

.service-card:hover {
    transform: translateY(-15px) scale(1.02) rotateY(0deg); /* Adjust scale for hover if desired */
    box-shadow: 0 15px 40px rgba(0, 255, 65, 0.4),
                0 5px 15px rgba(0, 0, 0, 0.3);
    background-color: rgba(255, 255, 255, 0.08);
    border-color: var(--dark-green);
}

/* Revealed state for 3D zoom effect */
.service-card.revealed {
    opacity: 1;
    transform: translateY(0) scale(1) rotateY(0deg); /* Ends at normal size, position, and rotation */
}

/* Light Mode Adjustments */
body.light-mode .service-card {
    background-color: rgba(0, 0, 0, 0.03);
    border: 1px solid rgba(0, 0, 0, 0.08);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

body.light-mode .service-card:hover {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2),
                0 5px 15px rgba(0, 0, 0, 0.1);
    background-color: rgba(0, 0, 0, 0.05);
    border-color: var(--primary-black);
}
/* In CSS Variables.txt */
.about-text p {
    font-size: 18px;
    line-height: 1.8;
    color: var(--primary-gray);
    margin-bottom: 20px; /* This ensures spacing below each paragraph */
}

.footer-section h4 {
    color: var(--modern-green); /* Use your vibrant green for emphasis */
    font-size: 24px; /* Example font size */
    margin-bottom: 15px; /* Space below the heading */
    /* Add any other desired styling, e.g., font-weight, text-align */
    font-weight: 700;
}



.image-showcase * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    /* Basic styling for the section title */
    .section-title {
        font-size: 3em;
        font-weight: bold;
        margin-bottom: 30px;
        text-align: center;
        color: #f5f2f2; /* Adjust to your website's primary text color */
        text-transform: uppercase;
        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; /* Keep consistent font */
        padding-top: 50px; /* Space above the section */
    }

    .image-showcase {
        /* Add background or padding for the section itself if desired */
        background: #000000; /* Matching the carousel's background, adjust if needed */
        padding-bottom: 50px; /* Space below the section */
        width: 100%; /* Ensure section takes full width */
        display: flex;
        flex-direction: column;
        align-items: center; /* Center the container horizontally */
        /* If you want the whole section to behave like `body` from the original, add `overflow: hidden;` here */
    }

    .container {
        position: relative; /* Changed from absolute for section integration */
        width: 1000px;
        height: 600px;
        background: #f5f5f5;
        box-shadow: 0 20px 40px #37ff1461;
        border-radius: 20px;
        overflow: hidden; /* Essential for carousel sliding effect */
        margin: 0 auto; /* Centers the container horizontally within its parent */
        /* Removed original absolute positioning as it would position relative to viewport */
    }

    .container .slide {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .container .slide .item {
        width: 200px;
        height: 300px;
        position: absolute;
        top: 50%;
        transform: translate(0, -50%);
        border-radius: 20px;
        box-shadow: 0 30px 50px #505050;
        background-position: 50% 50%;
        background-size: cover;
        display: inline-block;
        transition: 0.5s;
    }

    .slide .item:nth-child(1),
    .slide .item:nth-child(2) {
        top: 0;
        left: 0;
        transform: translate(0, 0);
        border-radius: 0;
        width: 100%;
        height: 100%;
    }

    .slide .item:nth-child(3) {
        left: 50%;
    }
    .slide .item:nth-child(4) {
        left: calc(50% + 220px);
    }
    .slide .item:nth-child(5) {
        left: calc(50% + 440px);
    }

    /* here n = 0, 1, 2, 3,... */
    .slide .item:nth-child(n + 6) {
        left: calc(50% + 660px);
        opacity: 0;
    }

    .item .content {
        position: absolute;
        top: 50%;
        left: 100px;
        width: 300px;
        text-align: left;
        color: #eee;
        transform: translate(0, -50%);
        font-family: system-ui;
        display: none;
    }

    .slide .item:nth-child(2) .content {
        display: block;
    }

    .content .name {
        font-size: 40px;
        text-transform: uppercase;
        font-weight: bold;
        opacity: 0;
        animation: animate 1s ease-in-out 1 forwards;
        color: #fff;
    }

    .content .des {
        margin-top: 10px;
        margin-bottom: 20px;
        opacity: 0;
        animation: animate 1s ease-in-out 0.3s 1 forwards;
        color: #eee;
    }

    .content button {
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        opacity: 0;
        animation: animate 1s ease-in-out 0.6s 1 forwards;
        background: #11e018;
        color: rgb(0, 0, 0);
        border-radius: 5px;
    }

    @keyframes animate {
        from {
            opacity: 0;
            transform: translate(0, 100px);
            filter: blur(33px);
        }
        to {
            opacity: 1;
            transform: translate(0);
            filter: blur(0);
        }
    }

    .button {
        width: 100%;
        text-align: center;
        position: absolute;
        bottom: 20px;
        left: 0;
    }

    .button button {
        width: 40px;
        height: 35px;
        border-radius: 8px;
        border: 1px solid #000;
        cursor: pointer;
        margin: 0 5px;
        transition: 0.3s;
        background: #fff;
        color: #000;
        font-size: 1.2em;
    }

    .button button:hover {
        background: #ababab;
        color: #fff;
    }

    /* Responsive adjustments */
    @media (max-width: 1024px) {
        .container {
            width: 90%;
            height: 500px;
        }
        .item {
            width: 180px;
            height: 270px;
        }
        .slide .item:nth-child(4) {
            left: calc(50% + 200px);
        }
        .slide .item:nth-child(5) {
            left: calc(50% + 400px);
        }
        .slide .item:nth-child(n + 6) {
            left: calc(50% + 600px);
        }
        .item .content {
            left: 50px;
            width: 250px;
        }
        .content .name {
            font-size: 32px;
        }
        .content .des {
            font-size: 0.9em;
        }
    }

    @media (max-width: 768px) {
        .section-title {
            font-size: 2em;
        }
        .container {
            width: 95%;
            height: 450px;
        }
        .item {
            width: 150px;
            height: 220px;
        }
        .slide .item:nth-child(3) {
            left: 45%;
        }
        .slide .item:nth-child(4) {
            left: calc(45% + 170px);
        }
        .slide .item:nth-child(5) {
            left: calc(45% + 340px);
        }
        .slide .item:nth-child(n + 6) {
            left: calc(45% + 510px);
        }
        .item .content {
            left: 30px;
            width: 200px;
        }
        .content .name {
            font-size: 26px;
        }
        .content .des {
            font-size: 0.8em;
        }
        .button {
            bottom: 10px;
        }
        .button button {
            width: 35px;
            height: 30px;
        }
    }

    @media (max-width: 480px) {
        .section-title {
            font-size: 1.5em;
            margin-bottom: 20px;
        }
        .image-showcase {
            padding: 10px; /* Reduce overall section padding */
        }
        .container {
            width: 100%;
            height: 350px;
            box-shadow: none;
        }
        .item {
            width: 120px;
            height: 180px;
            border-radius: 10px;
        }
        .slide .item:nth-child(3) {
            left: 40%;
        }
        .slide .item:nth-child(4) {
            left: calc(40% + 130px);
        }
        .slide .item:nth-child(5) {
            left: calc(40% + 260px);
        }
        .slide .item:nth-child(n + 6) {
            left: calc(40% + 390px);
        }
        .item .content {
            left: 15px;
            width: auto;
            right: 15px;
            top: 60%;
            transform: translate(0, -50%);
        }
        .content .name {
            font-size: 20px;
        }
        .content .des {
            font-size: 0.7em;
            margin-top: 5px;
            margin-bottom: 10px;
        }
        .content button {
            padding: 8px 15px;
            font-size: 0.8em;
        }
        .button button {
            width: 30px;
            height: 25px;
            font-size: 1em;
        }
    }

.download-section * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        .download-section {
            background-color: #1a1a1a;
            color: #f0f0f0;
            padding: 80px 20px;
            text-align: center;
            font-family: Arial, sans-serif;
            width: 100%;
            overflow: hidden;
        }
        .download-section h4 {
            font-size: 4em;
            margin-bottom: 20px;
            color: #ffffff;
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInSlideUp 1s ease-out forwards;
            animation-delay: 0.2s;
        }
        .download-section p {
            font-size: 1.1em;
            line-height: 1.6;
            max-width: 700px;
            margin: 0 auto 30px auto;
            color: #cccccc;
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInSlideUp 1s ease-out forwards;
            animation-delay: 0.4s;
        }
        
        /* ----- Corrected Animated Button CSS ----- */
        .btn-4 {
            scale: 0.5;
            --width: 300px;
            --height: 100px;
            --tooltip-height: 40px;
            --tooltip-width: 110px;
            --gap-between-tooltip-to-button: 18px;
            --button-color: #11e93f;
            --tooltip-color: #fff;
            width: var(--width);
            height: var(--height);
            background: var(--button-color);
            position: relative;
            text-align: center;
            border-radius: 50px;
            font-family: inherit;
            font-size: 35px;
            cursor: pointer;
            transition: background 0.3s;
            /* Initial animations for the button container */
            opacity: 0;
            transform: scale(0.9);
            animation: fadeInScale 1s ease-out forwards;
            animation-delay: 0.6s;
            margin: auto;
        }
        .btn-4::before {
            position: absolute;
            content: attr(data-tooltip);
            width: var(--tooltip-width);
            height: var(--tooltip-height);
            background-color: var(--tooltip-color);
            font-size: 16px;
            color: #0ac636;
            border-radius: 6px;
            line-height: var(--tooltip-height);
            bottom: calc(var(--height) + var(--gap-between-tooltip-to-button) + 10px);
            left: calc(50% - var(--tooltip-width) / 2);
            opacity: 0;
            visibility: hidden;
            transition: all 0.5s;
        }
        .btn-4::after {
            position: absolute;
            content: '';
            width: 0;
            height: 0;
            border-style: solid;
            border-color: var(--tooltip-color) transparent transparent transparent;
            border-width: 12px 12px 0 12px;
            bottom: calc(var(--height) + var(--gap-between-tooltip-to-button));
            left: calc(50% - 12px);
            opacity: 0;
            visibility: hidden;
            transition: all 0.5s;
        }
        .btn-4 .text {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .btn-4 .button-wrapper,
        .btn-4 .text,
        .btn-4 .icon {
            overflow: hidden;
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0;
            color: #fff;
        }
        .btn-4 .text {
            top: 0;
            transition: top 0.5s;
        }
        .btn-4 .icon {
            color: #fff;
            top: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: top 0.5s;
        }
        .btn-4 .icon svg {
            width: 24px;
            height: 24px;
        }
        .btn-4:hover {
            background: #02f860;
        }
        .btn-4:hover .text {
            top: -100%;
        }
        .btn-4:hover .icon {
            top: 0;
        }
        .btn-4:hover::before,
        .btn-4:hover::after {
            opacity: 1;
            visibility: visible;
        }
        .btn-4:hover::after {
            bottom: calc(var(--height) + var(--gap-between-tooltip-to-button) - 20px);
        }
        .btn-4:hover::before {
            bottom: calc(var(--height) + var(--gap-between-tooltip-to-button));
        }
        
        /* Keyframe Animations for the section content */
        @keyframes fadeInSlideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        @keyframes fadeInScale {
            from {
                opacity: 0;
                transform: scale(0.9);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }
        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }
        
        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .download-section {
                padding: 60px 15px;
            }
            .download-section h4 {
                font-size: 2em;
            }
            .download-section p {
                font-size: 1em;
                margin-bottom: 20px;
            }
            .btn-4 {
                padding: 12px 25px;
                font-size: 1.1em;
            }
        }
        @media (max-width: 480px) {
            .download-section {
                padding: 40px 10px;
            }
            .download-section h4 {
                font-size: 1.8em;
            }
            .download-section p {
                font-size: 0.9em;
            }
        }
